# -*- coding: utf-8 -*-
"""ml yt vid8 part 2 multivariate.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/183mLuV8uvgXcVhOASf2ggffDMqGyrhCw
"""

import pandas as pd
import numpy as np
from sklearn.datasets import load_digits
digits=load_digits()

digits.keys()

digits.target

digits.data

digits.images

import matplotlib.pyplot as plt

plt.gray()
for i in range(10):
  plt.matshow(digits.images[i])

xtrain,xtest,ytrain,ytest=train_test_split(digits.data,digits.target,train_size=0.8,random_state=0)

from sklearn.model_selection import train_test_split

from sklearn.linear_model import LogisticRegression
lg=LogisticRegression()

lg.fit(xtrain,ytrain)

lg.score(xtest,ytest)

ypred=lg.predict(xtest)

from sklearn.metrics import confusion_matrix,ConfusionMatrixDisplay

a=confusion_matrix(ytest,ypred)

a

b=ConfusionMatrixDisplay(a)

b.plot()

import seaborn as sns
plt.figure(figsize=(6,5))
sns.heatmap(a,annot=True,)
plt.xlabel='predicted'
plt.ylabel='True'

import numpy as np
x=np.identity(4)

x

sns.heatmap(x,annot=True)

x=[i for i in range(1,40,3)]
y=np.array(x)
sns.heatmap(y,annot=True)

a=np.array([1,2,3])
a

a.reshape(-1,1)

sns.heatmap(a)

## Exercise

from sklearn.datasets import load_iris
iris=load_iris()

dir(iris)

iris.data

xtrain,xtest,ytrain,ytest=train_test_split(iris.data,iris.target,test_size=0.2, random_state=0)
from sklearn.linear_model import LogisticRegression
lg=LogisticRegression()

lg.fit(xtrain,ytrain)

lg.score(xtest,ytest)

a=confusion_matrix(ytest,lg.predict(xtest))

a

