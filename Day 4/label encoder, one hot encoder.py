# -*- coding: utf-8 -*-
"""ML yt vid 6 label encoder, one hot encoder.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HHiYftPV9YiPphqZF7-Vq0MRCBtP1m9H
"""

import numpy as np
import pandas as pd
from google.colab import files
from sklearn.linear_model import LinearRegression

lreg=LinearRegression()

df=pd.read_csv('homeprices.csv')
df.head()

#creating dummy variables
dummies=pd.get_dummies(df.town)
dummies

dfdum=pd.concat([df,dummies],axis=1)

# dropping columns to reduce dimensionality curse
dfdum.drop(['town','west windsor'],axis=1,inplace=True)

x=dfdum.drop('price',axis=1)
y=dfdum.price

lreg.fit(x,y)

lreg.score(x,y)

from sklearn.preprocessing import MinMaxScaler

mms=MinMaxScaler()

dfdum['area_scaled']=mms.fit_transform(dfdum[['area']])

dfdum.head()

x1=dfdum.drop(['price','area'],axis=1)
x1.head()

lreg.fit(x1,y)

lreg.score(x1,y)

lreg.predict([[3400,1,0]])

lreg.predict([[3400,0,0]])

lreg.predict([[3400,0,1]])

df.head()

from sklearn.preprocessing import LabelEncoder
lb=LabelEncoder()

dfle=df
dfle['town']=lb.fit_transform(dfle[['town']])

dfle

dfle.drop('town2',axis='columns',inplace=True)

from sklearn.preprocessing import OneHotEncoder

dfle.head()

x=dfle[['town','area']].values
y=dfle.price

x

from sklearn.compose import ColumnTransformer

ct=ColumnTransformer([('town',OneHotEncoder(),[0])],remainder='passthrough')

x=ct.fit_transform(x)
x

x=x[:,1:]

x

lreg.fit(x,y)

lreg.predict([[0,0,3400]])

#exercisre

files.upload()

df=pd.read_csv('carprices.csv')
df.head()

import seaborn as sns

sns.scatterplot(df['Sell Price($)'],df['Mileage'])

dummies=pd.get_dummies(df['Car Model'])

dummies

dfdum=pd.concat([df,dummies], axis=1)

dfdum.head()

dfdum.drop(['Car Model','Audi A5'],axis=1,inplace=True)

dfdum.head()



x=dfdum.drop('Sell Price($)',axis=1)
y=dfdum['Sell Price($)']

lreg.fit(x,y)

lreg.score(x,y)

lreg.predict([[45000,4,0,1]])

lreg.predict([[86000,7,1,0]])

lreg.coef_

